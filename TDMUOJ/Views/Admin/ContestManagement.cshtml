@model List<TDMUOJ.Models.Contest>
<style>
    /* Existing styles... */

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
        border-radius: 5px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover {
            color: black;
        }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

    button[type="submit"] {
        background-color: #3498db;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        button[type="submit"]:hover {
            background-color: #2980b9;
        }

    .btn-add {
        background-color: #2ecc71;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-bottom: 20px;
    }

        .btn-add:hover {
            background-color: #27ae60;
        }
</style>
<div id="contests" class="dashboard-item hidden">
    <h2>Quản lý cuộc thi</h2>
    <form id="newContestForm" method="post">
        <div class="form-group">
            <label for="newContestTitle">Tên cuộc thi:</label>
            <input type="text" id="newContestTitle" name="title" required />
        </div>
        <div class="form-group">
            <label for="newStartTime">Thời gian bắt đầu:</label>
            <input type="datetime-local" id="newStartTime" name="startTime" required />
        </div>
        <div class="form-group">
            <label for="newEndTime">Thời gian kết thúc:</label>
            <input type="datetime-local" id="newEndTime" name="endTime" required />
        </div>
        <div class="form-group">
            <label for="newRules">Quy tắc cuộc thi:</label>
            <textarea id="newRules" name="rules" rows="5" style="width: 100%" required></textarea>
        </div>
        <input name="virtualMode" value="0" hidden />
        <button type="submit" class="btn-add">Thêm cuộc thi mới</button>
    </form>
    <table>
        <tr>
            <th>STT</th>
            <th>Tên cuộc thi</th>
            <th>Thời gian bắt đầu</th>
            <th>Thời gian kết thúc</th>
            <th>Thao tác</th>
        </tr>
        @for (var i = 0; i < Model.Count; i++)
        {
            <tr>
                <td>@(i+1)</td>
                <td>@Model[i].title</td>
                <td>@Model[i].startTime.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@Model[i].endTime.ToString("dd/MM/yyyy HH:mm")</td>
                <td>
                    <a href="@Url.Action("DetailExam", "Exams", new {id = Model[i].id })">Chi tiết</a> |
                    <a href="#" onclick="showEditModal(@Model[i].id, '@Model[i].title', '@Model[i].startTime.ToString("dd-MM-yyyy HH:mm:ss")', '@Model[i].endTime.ToString("dd-MM-yyyy HH:mm:ss")', '@Model[i].rules')">Sửa</a> |
                    <a href="@Url.Action("DeleteContest", "Admin", new {id = Model[i].id})">Xóa</a>
                </td>
            </tr>
        }
    </table>
</div>

<!-- Modal Edit Contest -->
<div class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Chỉnh sửa cuộc thi</h2>
        <form id="editContestForm" method="post">
            <input type="hidden" id="contestId" name="id" />
            <div class="form-group">
                <label for="title">Tên cuộc thi:</label>
                <input type="text" id="title" name="title" required />
            </div>
            <div class="form-group">
                <label for="startTime">Thời gian bắt đầu:</label>
                <input type="datetime-local" id="startTime" name="startTime" required />
            </div>
            <div class="form-group">
                <label for="endTime">Thời gian kết thúc:</label>
                <input type="datetime-local" id="endTime" name="endTime" required />
            </div>
            <div class="form-group">
                <label for="newRules">Quy tắc cuộc thi:</label>
                <textarea id="rules" name="rules" rows="5" style="width: 100%" required></textarea>
            </div>
            <button type="submit">Lưu thay đổi</button>
        </form>
    </div>
</div>
<script>
    const modal = document.getElementsByClassName("modal")[0];
    const span = document.getElementsByClassName("close")[0];

    function showEditModal(id, title, startTime, endTime, rules) {
        modal.style.display = "block";

        document.getElementById("contestId").value = id;
        document.getElementById("title").value = title;

        document.getElementById("startTime").value = formatDateTime(new Date(startTime));
        document.getElementById("endTime").value = formatDateTime(new Date(endTime));
        document.getElementById("rules").value = rules;
    }

    function formatDateTime(date) {
        return date.getFullYear() + '-' +
               String(date.getMonth() + 1).padStart(2, '0') + '-' +
               String(date.getDate()).padStart(2, '0') + 'T' +
               String(date.getHours()).padStart(2, '0') + ':' +
               String(date.getMinutes()).padStart(2, '0');
    }

    // Close modal when clicking (x)
    span.onclick = function() {
        modal.style.display = "none";
    }

    // Handle form submission
    document.getElementById("editContestForm").onsubmit = function(e) {
        e.preventDefault();

        const formData = new FormData(this);

        fetch('@Url.Action("EditContest", "Admin")', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Cập nhật thành công!');
                window.location.reload();
            } else {
                alert('Có lỗi xảy ra: ' + data.message);
            }
        })
        .catch(error => {
            alert('Có lỗi xảy ra khi gửi yêu cầu');
        });
    };

    // Handle new contest form submission
        document.getElementById("newContestForm").onsubmit = function(e) {
            e.preventDefault();

            const formData = new FormData(this);

            fetch('@Url.Action("AddContest", "Admin")', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Thêm cuộc thi mới thành công!');
                    window.location.reload();
                } else {
                    alert('Có lỗi xảy ra: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi gửi yêu cầu');
            });
    };

</script>