@model TDMUOJ.Models.ContestStatus
@{
    ViewBag.Title = "Các kỳ thi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/css/Exams.css" />

<div class="exams-container">
    <div class="page-header">
        <h1 class="page-title">Các kỳ thi</h1>
    </div>

    <!-- Kỳ thi đang diễn ra -->
    <div class="exam-section">
        <div class="section-header">
            <h2 class="section-title">Kỳ thi đang diễn ra</h2>
        </div>

        @if (Model.contestsRunning.Count > 0)
        {
            <div class="exams-list">
                @foreach (var contest in Model.contestsRunning)
                {
                    <div class="exam-card running" data-endtime="@contest.endTime.ToString("yyyy-MM-dd HH:mm:ss")">
                        <div class="exam-status">
                            <div class="status-badge status-running">Đang diễn ra</div>
                        </div>
                        <div class="exam-content">
                            <h3 class="exam-title">
                                <a href="@Url.Action("DetailExam", "Exams", new {id = @contest.id})">
                                    @contest.title
                                </a>
                            </h3>
                            <div class="exam-meta">
                                <div class="exam-time">
                                    <span class="time-label">Bắt đầu:</span>
                                    <span class="time-value">@contest.startTime.ToString("dd-MM-yyyy HH:mm")</span>
                                </div>
                                <div class="exam-countdown">
                                    <span class="countdown-label">Kết thúc sau:</span>
                                    <span class="countdown-value time-down"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <p>Chưa có kỳ thi nào đang diễn ra</p>
            </div>
        }
    </div>

    <!-- Kỳ thi sắp tới -->
    <div class="exam-section">
        <div class="section-header">
            <h2 class="section-title">Kỳ thi sắp tới</h2>
        </div>

        @if (Model.contestsUpComming.Count > 0)
        {
            <div class="exams-list">
                @foreach (var contest in Model.contestsUpComming)
                {
                    <div class="exam-card upcoming" data-endtime="@contest.startTime.ToString("yyyy-MM-dd HH:mm:ss")">
                        <div class="exam-status">
                            <div class="status-badge status-upcoming">Sắp diễn ra</div>
                        </div>
                        <div class="exam-content">
                            <h3 class="exam-title">
                                <a href="@Url.Action("DetailExam", "Exams", new {id = @contest.id})">
                                    @contest.title
                                </a>
                            </h3>
                            <div class="exam-meta">
                                <div class="exam-time">
                                    <span class="time-label">Bắt đầu:</span>
                                    <span class="time-value">@contest.startTime.ToString("dd-MM-yyyy HH:mm")</span>
                                </div>
                                <div class="exam-countdown">
                                    <span class="countdown-label">Bắt đầu sau:</span>
                                    <span class="countdown-value time-down"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <p>Chưa có kỳ thi nào được lên lịch</p>
            </div>
        }
    </div>

    <!-- Kỳ thi đã qua -->
    <div class="exam-section">
        <div class="section-header">
            <h2 class="section-title">Các kỳ thi đã qua</h2>
        </div>

        @if (Model.contestsEnded.Count > 0)
        {
            <div class="past-exams-table-container">
                <table class="past-exams-table">
                    <thead>
                        <tr>
                            <th class="column-contest">Kỳ thi</th>
                            <th class="column-participants">Số người tham gia</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var contest in Model.contestsEnded)
                        {
                            <tr class="past-exam-row">
                                <td class="column-contest">
                                    <div class="past-exam-info">
                                        <h3 class="past-exam-title">
                                            <a href="@Url.Action("DetailExam", "Exams", new {id = @contest.contest.id})">
                                                @contest.contest.title
                                            </a>
                                        </h3>
                                        <div class="past-exam-meta">
                                            <div class="past-exam-time">
                                                Bắt đầu: @contest.contest.startTime.ToString("dd-MM-yyyy, HH:mm")
                                            </div>
                                            <div class="past-exam-duration">
                                                @{ TimeSpan diff = contest.contest.endTime.Subtract(contest.contest.startTime);}
                                                Thời gian: @diff.TotalMinutes phút
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="column-participants">
                                    <div class="participants-count">@contest.participantedCount</div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <p>Chưa có kỳ thi nào trong quá khứ</p>
            </div>
        }
    </div>
</div>

<script>
    // Lấy tất cả các phần tử kỳ thi
    const examCards = document.querySelectorAll(".exam-card");

    // Hàm cập nhật countdown
    function updateCountdown() {
        examCards.forEach(card => {
            const endTime = new Date(card.getAttribute("data-endtime")).getTime();
            const now = new Date().getTime();
            const distance = endTime - now;
            const countdownElement = card.querySelector(".time-down");

            if (distance > 0) {
                const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((distance % (1000 * 60)) / 1000);

                const unit = ["ngày", "giờ", "phút", "giây"];
                const value = [days, hours, minutes, seconds];
                const id = (days > 0 ? 0 : hours > 0 ? 1 : minutes > 0 ? 2 : 3);

                let time = "";
                for (let i = id; i < 4; i++) {
                    time = `${time} ${value[i]} ${unit[i]}`;
                }

                countdownElement.innerText = time.trim();

                // Thêm hiệu ứng nhấp nháy cho countdown sắp hết giờ (dưới 5 phút)
                if (distance < 5 * 60 * 1000) {
                    countdownElement.classList.add("urgent");
                } else {
                    countdownElement.classList.remove("urgent");
                }
            } else {
                countdownElement.innerText = "Hết giờ!";

                // Tự động làm mới trang sau 3 giây khi hết giờ
                setTimeout(() => {
                    window.location.reload();
                }, 3000);
            }
        });
    }

    // Cập nhật mỗi giây
    setInterval(updateCountdown, 1000);

    // Khởi chạy ngay khi tải trang
    updateCountdown();
</script>